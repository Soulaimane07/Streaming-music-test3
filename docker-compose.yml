version: '3.8'

services:
  mongodb:
    image: mongo:6
    container_name: DB-Catalog
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: CatalogDb
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  # Catalog Service
  catalog-service:
    build:
      context: .
      dockerfile: docker/backend/catalog/Dockerfile
    container_name: Service-Catalog
    ports:
      - "8081:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=mongodb;Port=27017;Database=catalogdb;Username=admin;Password=password
    depends_on:
      - mongodb
    networks:
      - app-network

  # MySQL for User Service
  mysql:
    image: mysql:8
    container_name: DB-User
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_service_db
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    volumes:
      - mysqldata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: docker/backend/user/Dockerfile
    container_name: Service-User
    ports:
      - "8082:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=mysql;Port=3306;Database=spotify;Username=user;Password=userpassword
    depends_on:
      - mysql
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: Frontend
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - catalog-service
    networks:
      - app-network

volumes:
  pgdata: # For PostgreSQL data persistence
  mongodata: # For MongoDB data persistence
  mysqldata: # For MySQL data persistence

networks:
  app-network:
    driver: bridge
