name: CI Pipeline for Docker Compose

on:
  push:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # Set up a PostgreSQL service container as defined in your Docker Compose file
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: spotify
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    # Checkout the code from your repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx for building multi-platform images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub if needed (optional)
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and start all services defined in the Docker Compose file
    - name: Build and Start Docker Compose
      run: docker-compose -f docker-compose.yml up --build -d

    # Run tests if applicable (replace with your test command)
    - name: Run Tests
      run: |
        # Add your commands here to verify that your containers are running properly
        # Example: curl request to check if the frontend or backend service is responding
        curl -f http://localhost:8080 || exit 1
        curl -f http://localhost:3000 || exit 1

    # Stop and remove containers
    - name: Stop Docker Compose
      run: docker-compose -f docker-compose.yml down
