version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: DB-User
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userDb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    volumes:
      - mysql-db:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - spotify


  user-service:
    build:
      context: .
      dockerfile: ./docker/backend/user/Dockerfile
    container_name: Service-User
    ports:
      - "8090:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=mysql;Port=3306;Database=userDb;Username=myuser;Password=mypassword
    depends_on:
      - mysql
    networks:
      - spotify


  mongodb:
    image: mongo:6
    container_name: DB-Catalog
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: CatalogDb
    volumes:
      - mongo-db:/data/db
    ports:
      - "27017:27017"
    networks:
      - spotify


  catalog-service:
    build:
      context: .
      dockerfile: docker/backend/catalog/Dockerfile
    container_name: Service-Catalog
    ports:
      - "8091:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=mongodb;Port=27017;Database=CatalogDb;Username=root;Password=root
    depends_on:
      - mongodb
    networks:
      - spotify


  playlist-service:
    build:
      context: .
      dockerfile: docker/backend/playlist/Dockerfile
    container_name: Service-playlist
    ports:
      - "8090:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=mongodb;Port=27017;Database=CatalogDb;Username=root;Password=root
    depends_on:
      - mongodb
    networks:
      - spotify


  search-service:
    build:
      context: .
      dockerfile: docker/backend/search/Dockerfile
    container_name: Service-search
    ports:
      - "8092:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=mongodb;Port=27017;Database=CatalogDb;Username=root;Password=root
    depends_on:
      - mongodb
    networks:
      - spotify


  recommendation-service:
    build:
      context: .
      dockerfile: docker/backend/recommendation/Dockerfile
    container_name: Service-recommendation
    ports:
      - "8093:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=mongodb;Port=27017;Database=CatalogDb;Username=root;Password=root
    depends_on:
      - mongodb
    networks:
      - spotify


  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: Frontend
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - catalog-service
    networks:
      - spotify


networks:
  spotify:
    driver: bridge

volumes:
  mysql-db:
    external: true
  mongo-db:
    external: true
